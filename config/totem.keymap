#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

#define BASE 0
#define CODE 1
#define NAV  2
#define MOD  3
#define ADJ  4

/ {
    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <300>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        
        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <300>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        
        td_bs_pipe: backslash_pipe {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";
        
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        
        combo_dictation {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp LA(SPACE)>;
            slow-release;
        };
        
        combo_enye {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp RA(N)>;
        };
    };

    macros {
        mac_lock: mac_lock_screen {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LGUI &kp LCTRL>
                     , <&macro_pause_for_release>
                     , <&macro_tap &kp Q>
                     , <&macro_release &kp LGUI &kp LCTRL>;
        };
        
        win_lock: win_lock_screen {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LGUI>
                     , <&macro_tap &kp L>
                     , <&macro_release &kp LGUI>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
                &kp Q           &kp W           &kp E           &kp R           &kp T               &kp Y           &kp U           &kp I           &kp O           &kp P
                &hml LGUI A     &hml LALT S     &hml LSHFT D    &hml LCTRL F    &kp G               &kp H           &hmr RCTRL J    &hmr RSHFT K    &hmr RALT L     &hmr RGUI SEMI
                &kp LBKT        &kp Z           &kp X           &kp C           &kp V               &kp B           &kp N           &kp M           &kp COMMA       &kp DOT         &kp FSLH        &kp RBKT
                                                                &lt CODE ESC    &kp BSPC            &lt MOD TAB     &lt ADJ ENTER   &kp SPACE       &lt NAV LSHFT
            >;
        };

        code_layer {
            bindings = <
                &kp GRAVE       &kp AT          &kp HASH        &kp DQT         &kp DLLR            &kp FSLH        &kp N7          &kp N8          &kp N9          &kp STAR
                &kp TILDE       &hml LALT LPAR  &hml LSHFT RPAR &hml LCTRL SQT  &kp UNDER           &kp MINUS       &hmr RCTRL N4   &hmr RSHFT N5   &hmr RALT N6    &kp PLUS
                &kp CARET       &kp AMPS        &td_bs_pipe PIPE BSLH &kp EXCL &trans              &trans          &kp EQUAL       &kp N1          &kp N2          &kp N3          &kp DOT         &kp PRCNT
                                                                &trans          &kp BSPC            &trans          &kp COMMA       &kp N0          &kp BSLH
            >;
        };

        nav_layer {
            bindings = <
                &trans          &msc SCRL_UP    &mmv MOVE_UP    &mkp LCLK       &mkp RCLK           &kp PG_UP       &kp HOME        &kp UP          &kp END         &kp DEL
                &msc SCRL_LEFT  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT &msc SCRL_RIGHT     &kp PG_DN       &kp LEFT        &kp DOWN        &kp RIGHT       &kp INS
                &trans          &trans          &msc SCRL_DOWN  &trans          &mkp MB4            &mkp MB5        &trans          &trans          &trans          &kp PSCRN       &kp K_UNDO      &trans
                                                                &trans          &trans              &trans          &trans          &trans          &trans
            >;
        };

        mod_layer {
            bindings = <
                &mac_lock       &win_lock       &trans          &trans          &trans              &kp C_PREV      &kp C_PP        &kp C_NEXT      &kp C_BRI_UP    &trans
                &kp CAPS        &sk LALT        &sk LSHFT       &sk LCTRL       &trans              &kp BSPC        &kp DEL         &kp SPACE       &kp ENTER       &kp TAB
                &trans          &trans          &trans          &trans          &trans              &trans          &kp C_VOL_DN    &kp C_MUTE      &kp C_VOL_UP    &kp C_BRI_DN    &trans          &trans
                                                                &trans          &trans              &trans          &trans          &trans          &trans
            >;
        };

        adj_layer {
            bindings = <
                &studio_unlock  &kp F7          &kp F8          &kp F9          &kp F12             &trans          &trans          &trans          &trans          &bt BT_CLR_ALL
                &trans          &kp F4          &kp F5          &kp F6          &kp F11             &trans          &bt BT_SEL 3    &bt BT_SEL 4    &trans          &trans
                &trans          &trans          &kp F1          &kp F2          &kp F3              &kp F10         &trans          &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_CLR      &trans
                                                                &trans          &trans              &trans          &trans          &trans          &trans
            >;
        };
    };
};

&sk {
    release-after-ms = <2000>;
    quick-release;
};
